name: CodeSonar
on:
  push:                  # Only run onces the Pull request is created
    branches:
      - 'release/**'               # Feature Branches
  pull_request:
    branches:
      - 'release/**'

jobs:
  CodeSonar_Analyze:
    permissions: write-all
    runs-on: self-hosted
    container:
      image: canuckmh/wolfssl-cso-builder:7.4p0
      credentials:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    env:
      GITHUB_CAFILE: ".github/github.cert.pem"
      GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      GITHUB_API_URL: https://api.github.com
      PULL_REQUEST_ID: ${{ github.event.pull_request.number }}
      ROOT_TREE: "Mark/WOLFSSL"
      ROOT_PROJECT_NAME: "wolfssl"
      BRANCH: ${{ github.head_ref || github.ref_name }}
      CSONAR_HUB_URL: "https://partnerdemo.codesonar.com"
      CSONAR_HUB_USER: "${{ secrets.CSONAR_HUB_USER }}"
      CSONAR_HUB_PASS: "${{ secrets.CSONAR_HUB_PASS }}"
      CSONAR_HUB_PWFILE: "codesonar.hub.pwfile"
      CODESONAR: /opt/codesonar/codesonar/bin/codesonar
      CSPYTHON: /opt/codesonar/codesonar/bin/cspython
      CSO_GITHUB: /opt/codesonar-github
      GITHUB_REPO_URL: "http://github.com/markhermeling/nginx"    # the github.repositoryUrl is not an http-link.
      TARGET: none
      DIFFLINK: none
      PRLINK: none
    steps:
      - name: Set parallelism and project name
        run: |
          echo "PARALLEL=`nproc`" >> $GITHUB_ENV
          echo "PROJECT_NAME=${ROOT_TREE}/$BRANCH" >> $GITHUB_ENV
      - name: Pull Request or Not?
        if: ${{ github.event.pull_request }}
        run:  echo "TARGET=${{ github.base_ref }}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v3
      - name: Safe directory
        run: git config --global --add safe.directory `pwd`
      - name: Create Hub Credentials
        run: echo "$CSONAR_HUB_PASS" > "$CSONAR_HUB_PWFILE"
      - name : configure
        run: ./autogen.sh ; ./configure --enable-all
      - name: Get id of latest analysis on the same branch
        if: ${{ github.event.pull_request }}
        id: compare-aid
        run: |
          GETURL=$(urlencode {\"limit\":1,\"orderBy\":[{\"analysisId\":\"DESCENDING\"}],\"columns\":[\"analysisId\"]})
          GETURL2=$(urlencode \"branch.name\"=\"$TARGET\" state=\"Finished\")
          "$CODESONAR" get \
          -auth password \
          -hubuser "$CSONAR_HUB_USER" \
          -hubpwfile "$CSONAR_HUB_PWFILE" \
          $CSONAR_HUB_URL/analysis_search.csv?sanlgrid_json=$GETURL\&query=$GETURL2 -o - | tail -1 > result
          echo "TARGET_PROJECT_AID=`cat result`" >> $GITHUB_ENV
      - name: Build
        run: >
              COMMIT_ID=$(git rev-parse --short ${{ github.sha }});
              NAME="$BRANCH-$(date "+%Y.%m.%d-%H.%M")";
              "$CODESONAR" build -clean $ROOT_PROJECT_NAME
              -remote-archive "/saas/*" -foreground
              -auth password
              -hubuser "$CSONAR_HUB_USER"
              -hubpwfile "$CSONAR_HUB_PWFILE"
              -project "$PROJECT_NAME"
              -name $NAME
              -conf-file conf/codesonar-release.conf
              "$CSONAR_HUB_URL"
              make -j $PARALLEL
      - name: Get id  of the analysis
        if: ${{ github.event.pull_request }}
        run: |
                    # First get the ID of the latest analysis on the same branch
                    GETURL=$(urlencode {\"limit\":1,\"orderBy\":[{\"analysisId\":\"DESCENDING\"}],\"columns\":[\"analysisId\"]})
                    GETURL2=$(urlencode \"branch.name\"=\"$TARGET\" state=\"Finished\")
                    "$CODESONAR" get \
                    -auth password \
                    -hubuser "$CSONAR_HUB_USER" \
                    -hubpwfile "$CSONAR_HUB_PWFILE" \
                    $CSONAR_HUB_URL/analysis_search.csv?sanlgrid_json=$GETURL\&query=$GETURL2 -o - | tail -1 > result
                    echo "TARGET_PROJECT_AID=`cat result`" >> $GITHUB_ENV
                    # second get the ID of the current analysis
                    echo "CURRENT_PROJECT_AID=`cat $ROOT_PROJECT_NAME.prj_files/aid.txt`" >> $GITHUB_ENV
                    CURRENT_PROJECT_AID=$(cat $ROOT_PROJECT_NAME.prj_files/aid.txt)
                    GETURL=$(urlencode aid:$CURRENT_PROJECT_AID DIFFERENCE aid:$TARGET_PROJECT_AID);
                    echo "DIFFLINK=$CSONAR_HUB_URL/search.html?query=$GETURL&scope=aid%3A$CURRENT_PROJECT_AID&swarnings=BJAW" >> $GITHUB_ENV
                    echo "PRLINK=$GITHUB_REPO_URL/pull/$PULL_REQUEST_ID" >> $GITHUB_ENV
      - name: Analyze
        run: >
            COMMIT_ID=$(git rev-parse --short ${{ github.sha }});
            NAME="$BRANCH-$(date "+%Y.%m.%d-%H.%M")";
            "$CODESONAR" analyze $ROOT_PROJECT_NAME
            -remote-archive "/saas/*" -foreground -preset fast
            -auth password
            -hubuser "$CSONAR_HUB_USER"
            -hubpwfile "$CSONAR_HUB_PWFILE"
            -project "$PROJECT_NAME"
            -property repo.url ${{ github.repositoryUrl }}
            -property commit.sha $COMMIT_ID
            -property commit.link "$GITHUB_REPO_URL/commit/$COMMIT_ID"
            -property PR.link $PRLINK
            -property branch.name $BRANCH
            -property target.branch $TARGET
            -property target.diff_link $DIFFLINK
            -name $NAME
            -conf-file conf/codesonar-release.conf
            "$CSONAR_HUB_URL"
      - name: Diff results with the target branch
        if: ${{ github.event.pull_request }}
        run: |
          GETURL=$(urlencode aid:$CURRENT_PROJECT_AID DIFFERENCE aid:$TARGET_PROJECT_AID)
          "$CODESONAR" get \
          -auth password \
          -hubuser "$CSONAR_HUB_USER" \
          -hubpwfile "$CSONAR_HUB_PWFILE" \
          $CSONAR_HUB_URL/warning_detail_search.sarif?query=$GETURL\&scope=aid%3A$CURRENT_PROJECT_AID\&swarnings=BJAW -o - > warnings.sarif
      - name: Upload SARIF to GitHub #Use this if you do not have GitHub Enterprise
        if: ${{ github.event.pull_request }}
        uses: actions/upload-artifact@v3
        with:
          name: SARIF file
          path: warnings.sarif
      - name: Cleanup Credential File
        run: shred -u "$CSONAR_HUB_PWFILE"
      - name: Push Summary Report
        if: ${{ github.event.pull_request }}
        run: >
            "$CSPYTHON" "$CSO_GITHUB/sarif_summary.py"
            warnings.sarif
            "$CSONAR_HUB_URL"
            "$ROOT_PROJECT_NAME"
            | "$CSPYTHON" "$CSO_GITHUB/push_github_pr_comment.py"
            --api-url $GITHUB_API_URL --cafile "$GITHUB_CAFILE"
            ${{ github.repository }}
            $PULL_REQUEST_ID
            GITHUB_TOKEN


